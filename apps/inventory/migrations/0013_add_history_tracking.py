# Generated by Django 4.2.11 on 2025-10-09 10:27

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("batch", "0022_add_history_tracking"),
        (
            "infrastructure",
            "0008_alter_area_options_alter_containertype_options_and_more",
        ),
        ("inventory", "0012_add_average_biomass_to_batch_feeding_summary"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalFeedPurchase",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("purchase_date", models.DateField()),
                (
                    "quantity_kg",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount of feed purchased in kilograms",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "cost_per_kg",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost per kilogram",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("supplier", models.CharField(max_length=100)),
                (
                    "batch_number",
                    models.CharField(
                        blank=True, help_text="Supplier's batch number", max_length=100
                    ),
                ),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "feed",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="inventory.feed",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical feed purchase",
                "verbose_name_plural": "historical feed purchases",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFeedContainerStock",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "quantity_kg",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Remaining quantity of this feed batch in the container (kg)",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "entry_date",
                    models.DateTimeField(
                        help_text="Date and time when this feed batch was added to the container"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "feed_container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Feed container where this batch is stored",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.feedcontainer",
                    ),
                ),
                (
                    "feed_purchase",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Original purchase batch this stock comes from",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="inventory.feedpurchase",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Feed Container Stock",
                "verbose_name_plural": "historical Feed Container Stocks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFeed",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100)),
                ("brand", models.CharField(max_length=100)),
                (
                    "size_category",
                    models.CharField(
                        choices=[
                            ("MICRO", "Micro"),
                            ("SMALL", "Small"),
                            ("MEDIUM", "Medium"),
                            ("LARGE", "Large"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "pellet_size_mm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Pellet size in millimeters",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "protein_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Protein content percentage",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                    ),
                ),
                (
                    "fat_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Fat content percentage",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                    ),
                ),
                (
                    "carbohydrate_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Carbohydrate content percentage",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical feed",
                "verbose_name_plural": "historical Feed",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContainerFeedingSummary",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "period_start",
                    models.DateField(help_text="Start date of the summary period"),
                ),
                (
                    "period_end",
                    models.DateField(help_text="End date of the summary period"),
                ),
                (
                    "total_feed_kg",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total feed used in this container during the period (kg)",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "starting_biomass_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Biomass at start of period (kg)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "ending_biomass_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Biomass at end of period (kg)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "growth_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Growth during the period (kg)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "fcr",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Feed Conversion Ratio for this container (total_feed_kg / growth_kg)",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "confidence_level",
                    models.CharField(
                        choices=[
                            ("VERY_HIGH", "Very High (< 10 days since weighing)"),
                            ("HIGH", "High (10-20 days since weighing)"),
                            ("MEDIUM", "Medium (20-40 days since weighing)"),
                            ("LOW", "Low (> 40 days since weighing)"),
                        ],
                        default="MEDIUM",
                        help_text="Confidence level based on time since last weighing",
                        max_length=20,
                    ),
                ),
                (
                    "estimation_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MEASURED", "Direct measurement from weighing events"),
                            (
                                "INTERPOLATED",
                                "Estimated from growth trends between weighings",
                            ),
                        ],
                        help_text="How the FCR value was calculated",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "data_points",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of feeding events contributing to this summary",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batch",
                    ),
                ),
                (
                    "container_assignment",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batchcontainerassignment",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical container feeding summary",
                "verbose_name_plural": "historical Container feeding summaries",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBatchFeedingSummary",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "period_start",
                    models.DateField(help_text="Start date of the summary period"),
                ),
                (
                    "period_end",
                    models.DateField(help_text="End date of the summary period"),
                ),
                (
                    "total_feed_kg",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total feed used across all containers (kg)",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "average_biomass_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Average biomass of the batch during this period (kg)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "average_feeding_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Average feeding percentage across containers",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                    ),
                ),
                (
                    "total_starting_biomass_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total batch biomass at start of period (kg)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "total_ending_biomass_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total batch biomass at end of period (kg)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "total_growth_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total batch growth during the period (kg)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "weighted_avg_fcr",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Weighted average FCR across all containers",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "fcr",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="DEPRECATED: Use weighted_avg_fcr instead",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "container_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of containers contributing to this summary",
                    ),
                ),
                (
                    "total_feed_consumed_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total feed consumed (same as total_feed_kg for consistency)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "total_biomass_gain_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total biomass gain (same as total_growth_kg for consistency)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "overall_confidence_level",
                    models.CharField(
                        choices=[
                            ("VERY_HIGH", "Very High (< 10 days since weighing)"),
                            ("HIGH", "High (10-20 days since weighing)"),
                            ("MEDIUM", "Medium (20-40 days since weighing)"),
                            ("LOW", "Low (> 40 days since weighing)"),
                        ],
                        default="MEDIUM",
                        help_text="Overall confidence level (worst case across containers)",
                        max_length=20,
                    ),
                ),
                (
                    "estimation_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MEASURED", "All containers have direct measurements"),
                            ("MIXED", "Some containers use interpolation"),
                            ("INTERPOLATED", "Most containers use interpolation"),
                        ],
                        help_text="Overall estimation method across containers",
                        max_length=20,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batch",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical batch feeding summary",
                "verbose_name_plural": "historical Batch feeding summaries",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
