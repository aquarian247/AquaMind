# Generated by Django 4.2.11 on 2025-10-09 10:23

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("batch", "0021_add_history_to_observation_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalSpecies",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("scientific_name", models.CharField(db_index=True, max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "optimal_temperature_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum optimal temperature in °C",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "optimal_temperature_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum optimal temperature in °C",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "optimal_oxygen_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum optimal oxygen level in mg/L",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "optimal_ph_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum optimal pH level",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "optimal_ph_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum optimal pH level",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical species",
                "verbose_name_plural": "historical Species",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalLifeCycleStage",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=100)),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        help_text="Order in lifecycle (1, 2, 3, etc.)"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "expected_weight_min_g",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum expected weight in grams",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "expected_weight_max_g",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum expected weight in grams",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "expected_length_min_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum expected length in centimeters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "expected_length_max_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum expected length in centimeters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "species",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.species",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical life cycle stage",
                "verbose_name_plural": "historical life cycle stages",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBatchComposition",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "percentage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Percentage of this source batch in the mixed batch",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                    ),
                ),
                (
                    "population_count",
                    models.PositiveIntegerField(
                        help_text="Number of fish from this source batch in the mixed batch",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "biomass_kg",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Biomass from this source batch in the mixed batch",
                        max_digits=10,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "mixed_batch",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batch",
                    ),
                ),
                (
                    "source_batch",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batch",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical batch composition",
                "verbose_name_plural": "historical Batch compositions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
