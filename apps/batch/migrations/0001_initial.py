# Generated by Django 4.2.11 on 2025-03-12 10:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("infrastructure", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Batch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("batch_number", models.CharField(max_length=50, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("COMPLETED", "Completed"),
                            ("TERMINATED", "Terminated"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                (
                    "population_count",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("biomass_kg", models.DecimalField(decimal_places=2, max_digits=10)),
                ("avg_weight_g", models.DecimalField(decimal_places=2, max_digits=10)),
                ("start_date", models.DateField()),
                ("expected_end_date", models.DateField(blank=True, null=True)),
                ("actual_end_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "container",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="batches",
                        to="infrastructure.container",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Species",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("scientific_name", models.CharField(max_length=200, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "optimal_temperature_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum optimal temperature in °C",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "optimal_temperature_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum optimal temperature in °C",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "optimal_oxygen_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum optimal oxygen level in mg/L",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "optimal_ph_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum optimal pH level",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "optimal_ph_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum optimal pH level",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Species",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MortalityEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_date", models.DateField()),
                (
                    "count",
                    models.PositiveIntegerField(help_text="Number of mortalities"),
                ),
                (
                    "biomass_kg",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Estimated biomass lost in kg",
                        max_digits=10,
                    ),
                ),
                (
                    "cause",
                    models.CharField(
                        choices=[
                            ("DISEASE", "Disease"),
                            ("HANDLING", "Handling"),
                            ("PREDATION", "Predation"),
                            ("ENVIRONMENTAL", "Environmental"),
                            ("UNKNOWN", "Unknown"),
                            ("OTHER", "Other"),
                        ],
                        default="UNKNOWN",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mortality_events",
                        to="batch.batch",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Mortality events",
            },
        ),
        migrations.CreateModel(
            name="LifeCycleStage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        help_text="Order in lifecycle (1, 2, 3, etc.)"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "expected_weight_min_g",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum expected weight in grams",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "expected_weight_max_g",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum expected weight in grams",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "expected_length_min_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum expected length in centimeters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "expected_length_max_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum expected length in centimeters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "species",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lifecycle_stages",
                        to="batch.species",
                    ),
                ),
            ],
            options={
                "ordering": ["species", "order"],
                "unique_together": {("species", "order")},
            },
        ),
        migrations.CreateModel(
            name="GrowthSample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sample_date", models.DateField()),
                (
                    "sample_size",
                    models.PositiveIntegerField(help_text="Number of fish sampled"),
                ),
                (
                    "avg_weight_g",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Average weight in grams",
                        max_digits=10,
                    ),
                ),
                (
                    "avg_length_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Average length in centimeters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "std_deviation_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Standard deviation of weight",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "std_deviation_length",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Standard deviation of length",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "min_weight_g",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum weight in grams",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "max_weight_g",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum weight in grams",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "condition_factor",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Condition factor (K)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="growth_samples",
                        to="batch.batch",
                    ),
                ),
            ],
            options={
                "ordering": ["batch", "-sample_date"],
            },
        ),
        migrations.CreateModel(
            name="BatchTransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transfer_type",
                    models.CharField(
                        choices=[
                            ("CONTAINER", "Container Transfer"),
                            ("LIFECYCLE", "Lifecycle Stage Change"),
                            ("SPLIT", "Batch Split"),
                            ("MERGE", "Batch Merge"),
                        ],
                        max_length=20,
                    ),
                ),
                ("transfer_date", models.DateField()),
                (
                    "source_count",
                    models.PositiveIntegerField(
                        help_text="Population count before transfer"
                    ),
                ),
                (
                    "transferred_count",
                    models.PositiveIntegerField(help_text="Number of fish transferred"),
                ),
                (
                    "mortality_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of mortalities during transfer"
                    ),
                ),
                (
                    "source_biomass_kg",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Biomass before transfer in kg",
                        max_digits=10,
                    ),
                ),
                (
                    "transferred_biomass_kg",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Biomass transferred in kg",
                        max_digits=10,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "destination_batch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_in",
                        to="batch.batch",
                    ),
                ),
                (
                    "destination_container",
                    models.ForeignKey(
                        blank=True,
                        help_text="New container after transfer",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_as_destination",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "destination_lifecycle_stage",
                    models.ForeignKey(
                        blank=True,
                        help_text="New lifecycle stage after transfer",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_as_destination",
                        to="batch.lifecyclestage",
                    ),
                ),
                (
                    "source_batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_out",
                        to="batch.batch",
                    ),
                ),
                (
                    "source_container",
                    models.ForeignKey(
                        help_text="Container before transfer",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_as_source",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "source_lifecycle_stage",
                    models.ForeignKey(
                        help_text="Lifecycle stage before transfer",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_as_source",
                        to="batch.lifecyclestage",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="batch",
            name="lifecycle_stage",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="batches",
                to="batch.lifecyclestage",
            ),
        ),
        migrations.AddField(
            model_name="batch",
            name="species",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="batches",
                to="batch.species",
            ),
        ),
    ]
