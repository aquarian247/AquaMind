# Generated by Django 4.2.11 on 2025-10-31 14:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("harvest", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("finance", "0006_make_polymorphic_fields_non_nullable"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="intercompanypolicy",
            options={
                "ordering": (
                    "from_company__geography__name",
                    "from_company__subsidiary",
                    "pricing_basis",
                )
            },
        ),
        migrations.RemoveConstraint(
            model_name="intercompanypolicy",
            name="intercompany_policy_company_lifecycle_uniq",
        ),
        migrations.AlterField(
            model_name="historicalintercompanypolicy",
            name="markup_percent",
            field=models.DecimalField(
                blank=True,
                decimal_places=3,
                help_text="Markup percentage for COST_PLUS method",
                max_digits=6,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="historicalintercompanypolicy",
            name="method",
            field=models.CharField(
                choices=[
                    ("market", "Market"),
                    ("cost_plus", "Cost Plus"),
                    ("standard", "Standard"),
                ],
                default="standard",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="historicalintercompanytransaction",
            name="content_type",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Source model type (HarvestEvent or BatchTransferWorkflow)",
                limit_choices_to=models.Q(
                    models.Q(("app_label", "harvest"), ("model", "harvestevent")),
                    models.Q(
                        ("app_label", "batch"), ("model", "batchtransferworkflow")
                    ),
                    _connector="OR",
                ),
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AlterField(
            model_name="historicalintercompanytransaction",
            name="event",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="DEPRECATED: Use polymorphic source instead",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="harvest.harvestevent",
            ),
        ),
        migrations.AlterField(
            model_name="historicalintercompanytransaction",
            name="object_id",
            field=models.PositiveIntegerField(help_text="Source object ID"),
        ),
        migrations.AlterField(
            model_name="historicalintercompanytransaction",
            name="state",
            field=models.CharField(
                choices=[
                    ("pending", "Pending Approval"),
                    ("posted", "Posted (Approved)"),
                    ("exported", "Exported to NAV"),
                ],
                default="pending",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="intercompanypolicy",
            name="markup_percent",
            field=models.DecimalField(
                blank=True,
                decimal_places=3,
                help_text="Markup percentage for COST_PLUS method",
                max_digits=6,
                null=True,
            ),
        ),
        migrations.AddConstraint(
            model_name="intercompanypolicy",
            constraint=models.UniqueConstraint(
                condition=models.Q(
                    ("lifecycle_stage__isnull", False), ("pricing_basis", "lifecycle")
                ),
                fields=("from_company", "to_company", "lifecycle_stage"),
                name="intercompany_policy_company_lifecycle_uniq",
            ),
        ),
    ]
