# Generated by Django 4.2.11 on 2025-06-12 08:15

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("infrastructure", "0007_add_container_history"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("batch", "0016_historicalbatch"),
    ]

    operations = [
        migrations.CreateModel(
            name="BreedingPair",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pairing_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Date of pairing"
                    ),
                ),
                (
                    "progeny_count",
                    models.IntegerField(
                        blank=True, help_text="Number of offspring produced", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Breeding Pair",
                "verbose_name_plural": "Breeding Pairs",
                "ordering": ["-pairing_date"],
            },
        ),
        migrations.CreateModel(
            name="BreedingPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Plan name (e.g., 'Winter 2023 Breeding')",
                        max_length=100,
                    ),
                ),
                ("start_date", models.DateTimeField(help_text="Plan start date")),
                ("end_date", models.DateTimeField(help_text="Plan end date")),
                (
                    "objectives",
                    models.TextField(blank=True, help_text="Plan objectives and goals"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="breeding_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Breeding Plan",
                "verbose_name_plural": "Breeding Plans",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="BroodstockFish",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "traits",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Basic traits (e.g., growth_rate, size)",
                    ),
                ),
                (
                    "health_status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("monitored", "Monitored"),
                            ("sick", "Sick"),
                            ("deceased", "Deceased"),
                        ],
                        default="healthy",
                        help_text="Current health status",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "container",
                    models.ForeignKey(
                        help_text="Current container housing the fish",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="broodstock_fish",
                        to="infrastructure.container",
                    ),
                ),
            ],
            options={
                "verbose_name": "Broodstock Fish",
                "verbose_name_plural": "Broodstock Fish",
            },
        ),
        migrations.CreateModel(
            name="EggProduction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "egg_batch_id",
                    models.CharField(
                        help_text="Unique egg batch identifier",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "egg_count",
                    models.IntegerField(
                        help_text="Number of eggs",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "production_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date produced or acquired",
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[("internal", "Internal"), ("external", "External")],
                        help_text="Internal or external source",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "destination_station",
                    models.ForeignKey(
                        blank=True,
                        help_text="Destination freshwater station",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="egg_productions",
                        to="infrastructure.freshwaterstation",
                    ),
                ),
                (
                    "pair",
                    models.ForeignKey(
                        blank=True,
                        help_text="Breeding pair (null for external eggs)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="egg_productions",
                        to="broodstock.breedingpair",
                    ),
                ),
            ],
            options={
                "verbose_name": "Egg Production",
                "verbose_name_plural": "Egg Productions",
                "ordering": ["-production_date"],
            },
        ),
        migrations.CreateModel(
            name="EggSupplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Supplier name", max_length=100, unique=True
                    ),
                ),
                (
                    "contact_details",
                    models.TextField(
                        help_text="Contact information (phone, email, address)"
                    ),
                ),
                (
                    "certifications",
                    models.TextField(
                        blank=True, help_text="Certifications and quality standards"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Egg Supplier",
                "verbose_name_plural": "Egg Suppliers",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MaintenanceTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("cleaning", "Cleaning"),
                            ("repair", "Repair"),
                            ("inspection", "Inspection"),
                            ("upgrade", "Equipment Upgrade"),
                        ],
                        help_text="Type of maintenance task",
                        max_length=50,
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateTimeField(help_text="Planned execution date"),
                ),
                (
                    "completed_date",
                    models.DateTimeField(
                        blank=True, help_text="Actual completion date", null=True
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional details about the task"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "container",
                    models.ForeignKey(
                        help_text="Container requiring maintenance",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="maintenance_tasks",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_maintenance_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Maintenance Task",
                "verbose_name_plural": "Maintenance Tasks",
                "ordering": ["-scheduled_date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalFishMovement",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "movement_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date and time of movement",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Details about the movement"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fish",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="broodstock.broodstockfish",
                    ),
                ),
                (
                    "from_container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "moved_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "to_container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.container",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Fish Movement",
                "verbose_name_plural": "historical Fish Movements",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalEggProduction",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "egg_batch_id",
                    models.CharField(
                        db_index=True,
                        help_text="Unique egg batch identifier",
                        max_length=50,
                    ),
                ),
                (
                    "egg_count",
                    models.IntegerField(
                        help_text="Number of eggs",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "production_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date produced or acquired",
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[("internal", "Internal"), ("external", "External")],
                        help_text="Internal or external source",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "destination_station",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Destination freshwater station",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.freshwaterstation",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pair",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Breeding pair (null for external eggs)",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="broodstock.breedingpair",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Egg Production",
                "verbose_name_plural": "historical Egg Productions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBroodstockFish",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "traits",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Basic traits (e.g., growth_rate, size)",
                    ),
                ),
                (
                    "health_status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("monitored", "Monitored"),
                            ("sick", "Sick"),
                            ("deceased", "Deceased"),
                        ],
                        default="healthy",
                        help_text="Current health status",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Current container housing the fish",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Broodstock Fish",
                "verbose_name_plural": "historical Broodstock Fish",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBreedingPair",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "pairing_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Date of pairing"
                    ),
                ),
                (
                    "progeny_count",
                    models.IntegerField(
                        blank=True, help_text="Number of offspring produced", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "female_fish",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="broodstock.broodstockfish",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "male_fish",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="broodstock.broodstockfish",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="broodstock.breedingplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Breeding Pair",
                "verbose_name_plural": "historical Breeding Pairs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBatchParentage",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignment_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date eggs assigned to batch",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batch",
                    ),
                ),
                (
                    "egg_production",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="broodstock.eggproduction",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Batch Parentage",
                "verbose_name_plural": "historical Batch Parentages",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="FishMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "movement_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date and time of movement",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Details about the movement"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "fish",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movements",
                        to="broodstock.broodstockfish",
                    ),
                ),
                (
                    "from_container",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="fish_movements_from",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "moved_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="fish_movements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "to_container",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="fish_movements_to",
                        to="infrastructure.container",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fish Movement",
                "verbose_name_plural": "Fish Movements",
                "ordering": ["-movement_date"],
            },
        ),
        migrations.CreateModel(
            name="ExternalEggBatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(help_text="Supplier's batch ID", max_length=50),
                ),
                (
                    "provenance_data",
                    models.TextField(
                        blank=True, help_text="Source farm and transport details"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "egg_production",
                    models.OneToOneField(
                        help_text="Link to egg production record",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="external_batch",
                        to="broodstock.eggproduction",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="egg_batches",
                        to="broodstock.eggsupplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "External Egg Batch",
                "verbose_name_plural": "External Egg Batches",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="breedingpair",
            name="female_fish",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="breeding_pairs_as_female",
                to="broodstock.broodstockfish",
            ),
        ),
        migrations.AddField(
            model_name="breedingpair",
            name="male_fish",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="breeding_pairs_as_male",
                to="broodstock.broodstockfish",
            ),
        ),
        migrations.AddField(
            model_name="breedingpair",
            name="plan",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="breeding_pairs",
                to="broodstock.breedingplan",
            ),
        ),
        migrations.CreateModel(
            name="BreedingTraitPriority",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "trait_name",
                    models.CharField(
                        choices=[
                            ("growth_rate", "Growth Rate"),
                            ("disease_resistance", "Disease Resistance"),
                            ("size", "Size"),
                            ("fertility", "Fertility"),
                        ],
                        help_text="Trait to prioritize",
                        max_length=50,
                    ),
                ),
                (
                    "priority_weight",
                    models.FloatField(
                        help_text="Weight from 0 to 1 (e.g., 0.7)",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trait_priorities",
                        to="broodstock.breedingplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Breeding Trait Priority",
                "verbose_name_plural": "Breeding Trait Priorities",
                "ordering": ["-priority_weight"],
                "unique_together": {("plan", "trait_name")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="breedingpair",
            unique_together={("plan", "male_fish", "female_fish")},
        ),
        migrations.CreateModel(
            name="BatchParentage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assignment_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date eggs assigned to batch",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parentage",
                        to="batch.batch",
                    ),
                ),
                (
                    "egg_production",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="batch_assignments",
                        to="broodstock.eggproduction",
                    ),
                ),
            ],
            options={
                "verbose_name": "Batch Parentage",
                "verbose_name_plural": "Batch Parentages",
                "ordering": ["-assignment_date"],
                "unique_together": {("batch", "egg_production")},
            },
        ),
    ]
