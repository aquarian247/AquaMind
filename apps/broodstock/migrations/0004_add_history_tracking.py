# Generated by Django 4.2.11 on 2025-10-09 10:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "infrastructure",
            "0008_alter_area_options_alter_containertype_options_and_more",
        ),
        ("broodstock", "0003_alter_fishmovement_movement_date_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalMaintenanceTask",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("cleaning", "Cleaning"),
                            ("repair", "Repair"),
                            ("inspection", "Inspection"),
                            ("upgrade", "Equipment Upgrade"),
                        ],
                        help_text="Type of maintenance task",
                        max_length=50,
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateTimeField(help_text="Planned execution date"),
                ),
                (
                    "completed_date",
                    models.DateTimeField(
                        blank=True, help_text="Actual completion date", null=True
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional details about the task"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Container requiring maintenance",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Maintenance Task",
                "verbose_name_plural": "historical Maintenance Tasks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalExternalEggBatch",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(help_text="Supplier's batch ID", max_length=50),
                ),
                (
                    "provenance_data",
                    models.TextField(
                        blank=True, help_text="Source farm and transport details"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "egg_production",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Link to egg production record",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="broodstock.eggproduction",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="broodstock.eggsupplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical External Egg Batch",
                "verbose_name_plural": "historical External Egg Batches",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalEggSupplier",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, help_text="Supplier name", max_length=100
                    ),
                ),
                (
                    "contact_details",
                    models.TextField(
                        help_text="Contact information (phone, email, address)"
                    ),
                ),
                (
                    "certifications",
                    models.TextField(
                        blank=True, help_text="Certifications and quality standards"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Egg Supplier",
                "verbose_name_plural": "historical Egg Suppliers",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBreedingTraitPriority",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "trait_name",
                    models.CharField(
                        choices=[
                            ("growth_rate", "Growth Rate"),
                            ("disease_resistance", "Disease Resistance"),
                            ("size", "Size"),
                            ("fertility", "Fertility"),
                        ],
                        help_text="Trait to prioritize",
                        max_length=50,
                    ),
                ),
                (
                    "priority_weight",
                    models.FloatField(
                        help_text="Weight from 0 to 1 (e.g., 0.7)",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="broodstock.breedingplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Breeding Trait Priority",
                "verbose_name_plural": "historical Breeding Trait Priorities",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBreedingPlan",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Plan name (e.g., 'Winter 2023 Breeding')",
                        max_length=100,
                    ),
                ),
                ("start_date", models.DateTimeField(help_text="Plan start date")),
                ("end_date", models.DateTimeField(help_text="Plan end date")),
                (
                    "objectives",
                    models.TextField(blank=True, help_text="Plan objectives and goals"),
                ),
                (
                    "geneticist_notes",
                    models.TextField(
                        blank=True,
                        help_text="Technical notes from geneticist about breeding priorities and trait selection",
                    ),
                ),
                (
                    "breeder_instructions",
                    models.TextField(
                        blank=True,
                        help_text="Clear instructions for breeders on execution of the breeding plan",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Breeding Plan",
                "verbose_name_plural": "historical Breeding Plans",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
