# Generated by Django 4.2.11 on 2025-04-30 10:52

from django.db import migrations

# SQL to drop the sequence (PostgreSQL specific)
DROP_SEQUENCE_SQL = """
DROP SEQUENCE IF EXISTS sampling_event_id_seq;
"""

# SQL to create the sequence (PostgreSQL specific) - For reverse operation
CREATE_SEQUENCE_SQL = """
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_sequences WHERE sequencename = 'sampling_event_id_seq') THEN
        CREATE SEQUENCE sampling_event_id_seq START 1 INCREMENT 1;
    END IF;
END $$;
"""

def drop_sequence_conditionally(apps, schema_editor):
    """Drops the sampling_event_id_seq sequence only if the database is PostgreSQL."""
    if schema_editor.connection.vendor == 'postgresql':
        schema_editor.execute(DROP_SEQUENCE_SQL)

def create_sequence_conditionally(apps, schema_editor):
    """Creates the sampling_event_id_seq sequence only if the database is PostgreSQL (for reverse operations)."""
    if schema_editor.connection.vendor == 'postgresql':
        schema_editor.execute(CREATE_SEQUENCE_SQL)

class Migration(migrations.Migration):

    dependencies = [
        ('health', '0011_remove_journalentry_sampling_event_id'),
    ]

    operations = [
        migrations.RunPython(
            code=drop_sequence_conditionally,
            reverse_code=create_sequence_conditionally
        ),
    ]
