# Generated by Django 4.2.11 on 2025-09-10 12:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ("batch", "0017_add_last_weighing_date"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("infrastructure", "0007_add_container_history"),
        (
            "health",
            "0017_alter_fishparameterscore_individual_fish_observation_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalTreatment",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "treatment_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "treatment_type",
                    models.CharField(
                        choices=[
                            ("medication", "Medication"),
                            ("vaccination", "Vaccination"),
                            ("physical", "Physical Treatment"),
                            ("other", "Other"),
                        ],
                        help_text="Type of treatment administered.",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Description of the treatment."),
                ),
                (
                    "dosage",
                    models.CharField(
                        blank=True,
                        help_text="Dosage of medication or treatment.",
                        max_length=100,
                    ),
                ),
                (
                    "duration_days",
                    models.PositiveIntegerField(
                        default=0, help_text="Duration of treatment in days."
                    ),
                ),
                (
                    "withholding_period_days",
                    models.PositiveIntegerField(
                        default=0, help_text="Withholding period in days."
                    ),
                ),
                (
                    "outcome",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("successful", "Successful"),
                            ("partial", "Partially Successful"),
                            ("unsuccessful", "Unsuccessful"),
                        ],
                        default="pending",
                        help_text="Outcome of the treatment.",
                        max_length=20,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The batch receiving the treatment.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batch",
                    ),
                ),
                (
                    "batch_assignment",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The specific batch-container assignment, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batchcontainerassignment",
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The specific container, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="User who recorded the treatment.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vaccination_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Specific vaccination type, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="health.vaccinationtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical treatment",
                "verbose_name_plural": "historical Treatments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMortalityRecord",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("event_date", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "count",
                    models.PositiveIntegerField(help_text="Number of fish that died."),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about the mortality event.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The batch experiencing mortality.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batch",
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The specific container, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reason",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Reason for the mortality.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="health.mortalityreason",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical mortality record",
                "verbose_name_plural": "historical Mortality Records",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalLiceCount",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("count_date", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "adult_female_count",
                    models.PositiveIntegerField(
                        help_text="Number of adult female lice counted."
                    ),
                ),
                (
                    "adult_male_count",
                    models.PositiveIntegerField(
                        help_text="Number of adult male lice counted."
                    ),
                ),
                (
                    "juvenile_count",
                    models.PositiveIntegerField(
                        help_text="Number of juvenile lice counted."
                    ),
                ),
                (
                    "fish_sampled",
                    models.PositiveIntegerField(
                        help_text="Number of fish sampled for the count."
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about the lice count."
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The batch being counted.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batch",
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The specific container, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="User who performed the count.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical lice count",
                "verbose_name_plural": "historical Lice Counts",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalJournalEntry",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("entry_date", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("observation", "Observation"),
                            ("issue", "Issue"),
                            ("action", "Action"),
                            ("diagnosis", "Diagnosis"),
                            ("treatment", "Treatment"),
                            ("vaccination", "Vaccination"),
                            ("sample", "Sample"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="low",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("description", models.TextField()),
                ("resolution_status", models.BooleanField(default=False)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The batch associated with this journal entry.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batch",
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The specific container, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="infrastructure.container",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="User who created the entry.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical journal entry",
                "verbose_name_plural": "historical Journal Entries",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalHealthLabSample",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "sample_date",
                    models.DateField(
                        help_text="Date the sample was physically taken. Crucial for historical linkage."
                    ),
                ),
                (
                    "date_sent_to_lab",
                    models.DateField(
                        blank=True,
                        help_text="Date the sample was sent to the laboratory.",
                        null=True,
                    ),
                ),
                (
                    "date_results_received",
                    models.DateField(
                        blank=True,
                        help_text="Date the results were received from the laboratory.",
                        null=True,
                    ),
                ),
                (
                    "lab_reference_id",
                    models.CharField(
                        blank=True,
                        help_text="External reference ID from the laboratory.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "findings_summary",
                    models.TextField(
                        blank=True,
                        help_text="Qualitative summary of the lab findings.",
                        null=True,
                    ),
                ),
                (
                    "quantitative_results",
                    models.JSONField(
                        blank=True,
                        help_text="Structured quantitative results (e.g., {'param': 'value', 'unit': 'cfu/ml'}).",
                        null=True,
                    ),
                ),
                (
                    "attachment",
                    models.TextField(
                        blank=True,
                        help_text="File attachment for the lab report (e.g., PDF).",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes or comments by the veterinarian.",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "batch_container_assignment",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The specific batch-container assignment active when the sample was taken.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="batch.batchcontainerassignment",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recorded_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="User who recorded this lab sample result.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sample_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Type of sample taken (e.g., skin mucus, water sample).",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="health.sampletype",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Health Lab Sample",
                "verbose_name_plural": "historical Health Lab Samples",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
