name: Sync OpenAPI Spec to Frontend

on:
  workflow_run:
    workflows: ["AquaMind CI/CD"]
    types:
      - completed

jobs:
  sync-api-spec:
    runs-on: ubuntu-latest
    # Only run if the triggering workflow was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    permissions:
      # Needed to download artifacts
      actions: read
      contents: read
      # Needed to create dispatch event
      repository-projects: write
    
    steps:
      - name: Download API spec artifact
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            
            const apiSpecArtifact = artifacts.data.artifacts.find(
              artifact => artifact.name === "api-spec"
            );
            
            if (!apiSpecArtifact) {
              core.setFailed('No api-spec artifact found');
              return;
            }
            
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: apiSpecArtifact.id,
              archive_format: 'zip'
            });
            
            const fs = require('fs');
            fs.writeFileSync('api-spec.zip', Buffer.from(download.data));
            
            const AdmZip = require('adm-zip');
            const zip = new AdmZip('api-spec.zip');
            zip.extractAllTo('api-spec-extracted', true);
            
            console.log('API spec artifact downloaded and extracted successfully');

      - name: Trigger frontend repository update
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.FRONTEND_REPO_PAT }}
          repository: aquarian247/AquaMind-Frontend
          event-type: api-spec-updated
          client-payload: |
            {
              "backend_commit": "${{ github.event.workflow_run.head_sha }}",
              "backend_branch": "${{ github.event.workflow_run.head_branch }}",
              "backend_workflow_url": "${{ github.event.workflow_run.html_url }}"
            }

      - name: Report status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Successfully triggered frontend API client regeneration"
          else
            echo "❌ Failed to trigger frontend API client regeneration"
            exit 1
          fi
